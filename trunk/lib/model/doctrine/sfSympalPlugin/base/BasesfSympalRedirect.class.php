<?php

/**
 * BasesfSympalRedirect
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @property integer $site_id
 * @property string $source
 * @property string $destination
 * @property integer $content_id
 * @property sfSympalSite $Site
 * @property sfSympalContent $Content
 * 
 * @method integer          getSiteId()      Returns the current record's "site_id" value
 * @method string           getSource()      Returns the current record's "source" value
 * @method string           getDestination() Returns the current record's "destination" value
 * @method integer          getContentId()   Returns the current record's "content_id" value
 * @method sfSympalSite     getSite()        Returns the current record's "Site" value
 * @method sfSympalContent  getContent()     Returns the current record's "Content" value
 * @method sfSympalRedirect setSiteId()      Sets the current record's "site_id" value
 * @method sfSympalRedirect setSource()      Sets the current record's "source" value
 * @method sfSympalRedirect setDestination() Sets the current record's "destination" value
 * @method sfSympalRedirect setContentId()   Sets the current record's "content_id" value
 * @method sfSympalRedirect setSite()        Sets the current record's "Site" value
 * @method sfSympalRedirect setContent()     Sets the current record's "Content" value
 * 
 * @package    sympal
 * @subpackage model
 * @author     lacyrhoades@gmail.com
 * @version    SVN: $Id: Builder.php 7490 2010-03-29 19:53:27Z jwage $
 */
abstract class BasesfSympalRedirect extends sfDoctrineRecord
{
    public function setTableDefinition()
    {
        $this->setTableName('sf_sympal_redirect');
        $this->hasColumn('site_id', 'integer', null, array(
             'type' => 'integer',
             'notnull' => true,
             ));
        $this->hasColumn('source', 'string', 255, array(
             'type' => 'string',
             'notnull' => true,
             'length' => 255,
             ));
        $this->hasColumn('destination', 'string', 255, array(
             'type' => 'string',
             'length' => 255,
             ));
        $this->hasColumn('content_id', 'integer', null, array(
             'type' => 'integer',
             ));
    }

    public function setUp()
    {
        parent::setUp();
        $this->hasOne('sfSympalSite as Site', array(
             'local' => 'site_id',
             'foreign' => 'id',
             'onDelete' => 'CASCADE'));

        $this->hasOne('sfSympalContent as Content', array(
             'local' => 'content_id',
             'foreign' => 'id',
             'onDelete' => 'CASCADE'));

        $sfsympalrecordtemplate0 = new sfSympalRecordTemplate(array(
             ));
        $this->actAs($sfsympalrecordtemplate0);
    }
}