<?php

/**
 * BasesfSympalContentSlot
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @property boolean $is_column
 * @property string $render_function
 * @property string $name
 * @property string $type
 * @property clob $value
 * @property Doctrine_Collection $Content
 * @property Doctrine_Collection $ContentSlotRefs
 * 
 * @method boolean             getIsColumn()        Returns the current record's "is_column" value
 * @method string              getRenderFunction()  Returns the current record's "render_function" value
 * @method string              getName()            Returns the current record's "name" value
 * @method string              getType()            Returns the current record's "type" value
 * @method clob                getValue()           Returns the current record's "value" value
 * @method Doctrine_Collection getContent()         Returns the current record's "Content" collection
 * @method Doctrine_Collection getContentSlotRefs() Returns the current record's "ContentSlotRefs" collection
 * @method sfSympalContentSlot setIsColumn()        Sets the current record's "is_column" value
 * @method sfSympalContentSlot setRenderFunction()  Sets the current record's "render_function" value
 * @method sfSympalContentSlot setName()            Sets the current record's "name" value
 * @method sfSympalContentSlot setType()            Sets the current record's "type" value
 * @method sfSympalContentSlot setValue()           Sets the current record's "value" value
 * @method sfSympalContentSlot setContent()         Sets the current record's "Content" collection
 * @method sfSympalContentSlot setContentSlotRefs() Sets the current record's "ContentSlotRefs" collection
 * 
 * @package    sympal
 * @subpackage model
 * @author     lacyrhoades@gmail.com
 * @version    SVN: $Id: Builder.php 7200 2010-02-21 09:37:37Z beberlei $
 */
abstract class BasesfSympalContentSlot extends sfDoctrineRecord
{
    public function setTableDefinition()
    {
        $this->setTableName('sf_sympal_content_slot');
        $this->hasColumn('is_column', 'boolean', null, array(
             'type' => 'boolean',
             'default' => false,
             ));
        $this->hasColumn('render_function', 'string', 255, array(
             'type' => 'string',
             'length' => '255',
             ));
        $this->hasColumn('name', 'string', 255, array(
             'type' => 'string',
             'notnull' => true,
             'length' => '255',
             ));
        $this->hasColumn('type', 'string', 255, array(
             'type' => 'string',
             'notnull' => true,
             'length' => '255',
             ));
        $this->hasColumn('value', 'clob', null, array(
             'type' => 'clob',
             ));


        $this->index('name', array(
             'fields' => 
             array(
              0 => 'name',
             ),
             ));
        $this->index('type', array(
             'fields' => 
             array(
              0 => 'type',
             ),
             ));
    }

    public function setUp()
    {
        parent::setUp();
        $this->hasMany('sfSympalContent as Content', array(
             'refClass' => 'sfSympalContentSlotRef',
             'local' => 'content_slot_id',
             'foreign' => 'content_id'));

        $this->hasMany('sfSympalContentSlotRef as ContentSlotRefs', array(
             'local' => 'id',
             'foreign' => 'content_slot_id'));

        $sfsympalrecordtemplate0 = new sfSympalRecordTemplate();
        $this->actAs($sfsympalrecordtemplate0);
    }
}