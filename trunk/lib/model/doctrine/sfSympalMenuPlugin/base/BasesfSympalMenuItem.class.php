<?php

/**
 * BasesfSympalMenuItem
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @property string $name
 * @property integer $root_id
 * @property timestamp $date_published
 * @property string $label
 * @property string $custom_path
 * @property boolean $requires_auth
 * @property boolean $requires_no_auth
 * @property string $html_attributes
 * @property integer $site_id
 * @property integer $content_id
 * @property sfSympalMenuItem $RootMenuItem
 * @property sfSympalContent $RelatedContent
 * @property sfSympalSite $Site
 * @property Doctrine_Collection $Groups
 * @property Doctrine_Collection $MenuItemGroups
 * 
 * @method string              getName()             Returns the current record's "name" value
 * @method integer             getRootId()           Returns the current record's "root_id" value
 * @method timestamp           getDatePublished()    Returns the current record's "date_published" value
 * @method string              getLabel()            Returns the current record's "label" value
 * @method string              getCustomPath()       Returns the current record's "custom_path" value
 * @method boolean             getRequiresAuth()     Returns the current record's "requires_auth" value
 * @method boolean             getRequiresNoAuth()   Returns the current record's "requires_no_auth" value
 * @method string              getHtmlAttributes()   Returns the current record's "html_attributes" value
 * @method integer             getSiteId()           Returns the current record's "site_id" value
 * @method integer             getContentId()        Returns the current record's "content_id" value
 * @method sfSympalMenuItem    getRootMenuItem()     Returns the current record's "RootMenuItem" value
 * @method sfSympalContent     getRelatedContent()   Returns the current record's "RelatedContent" value
 * @method sfSympalSite        getSite()             Returns the current record's "Site" value
 * @method Doctrine_Collection getGroups()           Returns the current record's "Groups" collection
 * @method Doctrine_Collection getMenuItemGroups()   Returns the current record's "MenuItemGroups" collection
 * @method sfSympalMenuItem    setName()             Sets the current record's "name" value
 * @method sfSympalMenuItem    setRootId()           Sets the current record's "root_id" value
 * @method sfSympalMenuItem    setDatePublished()    Sets the current record's "date_published" value
 * @method sfSympalMenuItem    setLabel()            Sets the current record's "label" value
 * @method sfSympalMenuItem    setCustomPath()       Sets the current record's "custom_path" value
 * @method sfSympalMenuItem    setRequiresAuth()     Sets the current record's "requires_auth" value
 * @method sfSympalMenuItem    setRequiresNoAuth()   Sets the current record's "requires_no_auth" value
 * @method sfSympalMenuItem    setHtmlAttributes()   Sets the current record's "html_attributes" value
 * @method sfSympalMenuItem    setSiteId()           Sets the current record's "site_id" value
 * @method sfSympalMenuItem    setContentId()        Sets the current record's "content_id" value
 * @method sfSympalMenuItem    setRootMenuItem()     Sets the current record's "RootMenuItem" value
 * @method sfSympalMenuItem    setRelatedContent()   Sets the current record's "RelatedContent" value
 * @method sfSympalMenuItem    setSite()             Sets the current record's "Site" value
 * @method sfSympalMenuItem    setGroups()           Sets the current record's "Groups" collection
 * @method sfSympalMenuItem    setMenuItemGroups()   Sets the current record's "MenuItemGroups" collection
 * 
 * @package    sympal
 * @subpackage model
 * @author     lacyrhoades@gmail.com
 * @version    SVN: $Id: Builder.php 7490 2010-03-29 19:53:27Z jwage $
 */
abstract class BasesfSympalMenuItem extends sfDoctrineRecord
{
    public function setTableDefinition()
    {
        $this->setTableName('sf_sympal_menu_item');
        $this->hasColumn('name', 'string', 255, array(
             'type' => 'string',
             'notnull' => true,
             'length' => 255,
             ));
        $this->hasColumn('root_id', 'integer', null, array(
             'type' => 'integer',
             ));
        $this->hasColumn('date_published', 'timestamp', null, array(
             'type' => 'timestamp',
             ));
        $this->hasColumn('label', 'string', 255, array(
             'type' => 'string',
             'length' => 255,
             ));
        $this->hasColumn('custom_path', 'string', 255, array(
             'type' => 'string',
             'length' => 255,
             ));
        $this->hasColumn('requires_auth', 'boolean', null, array(
             'type' => 'boolean',
             ));
        $this->hasColumn('requires_no_auth', 'boolean', null, array(
             'type' => 'boolean',
             ));
        $this->hasColumn('html_attributes', 'string', 255, array(
             'type' => 'string',
             'length' => 255,
             ));
        $this->hasColumn('site_id', 'integer', null, array(
             'type' => 'integer',
             'notnull' => true,
             ));
        $this->hasColumn('content_id', 'integer', null, array(
             'type' => 'integer',
             ));
    }

    public function setUp()
    {
        parent::setUp();
        $this->hasOne('sfSympalMenuItem as RootMenuItem', array(
             'local' => 'root_id',
             'foreign' => 'id',
             'onDelete' => 'CASCADE'));

        $this->hasOne('sfSympalContent as RelatedContent', array(
             'local' => 'content_id',
             'foreign' => 'id',
             'onDelete' => 'SET NULL'));

        $this->hasOne('sfSympalSite as Site', array(
             'local' => 'site_id',
             'foreign' => 'id',
             'onDelete' => 'CASCADE'));

        $this->hasMany('sfGuardGroup as Groups', array(
             'refClass' => 'sfSympalMenuItemGroup',
             'local' => 'menu_item_id',
             'foreign' => 'group_id'));

        $this->hasMany('sfSympalMenuItemGroup as MenuItemGroups', array(
             'local' => 'id',
             'foreign' => 'menu_item_id'));

        $sfsympalrecordtemplate0 = new sfSympalRecordTemplate();
        $sluggable0 = new Doctrine_Template_Sluggable(array(
             'fields' => 
             array(
              0 => 'name',
             ),
             'unique' => false,
             ));
        $nestedset0 = new Doctrine_Template_NestedSet(array(
             'hasManyRoots' => true,
             'rootColumnName' => 'root_id',
             ));
        $this->actAs($sfsympalrecordtemplate0);
        $this->actAs($sluggable0);
        $this->actAs($nestedset0);
    }
}