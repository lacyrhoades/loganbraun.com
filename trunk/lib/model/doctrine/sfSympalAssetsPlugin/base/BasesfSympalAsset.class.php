<?php

/**
 * BasesfSympalAsset
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @property string $name
 * @property string $path
 * @property Doctrine_Collection $Content
 * @property Doctrine_Collection $sfSympalContentAssets
 * 
 * @method string              getName()                  Returns the current record's "name" value
 * @method string              getPath()                  Returns the current record's "path" value
 * @method Doctrine_Collection getContent()               Returns the current record's "Content" collection
 * @method Doctrine_Collection getSfSympalContentAssets() Returns the current record's "sfSympalContentAssets" collection
 * @method sfSympalAsset       setName()                  Sets the current record's "name" value
 * @method sfSympalAsset       setPath()                  Sets the current record's "path" value
 * @method sfSympalAsset       setContent()               Sets the current record's "Content" collection
 * @method sfSympalAsset       setSfSympalContentAssets() Sets the current record's "sfSympalContentAssets" collection
 * 
 * @package    sympal
 * @subpackage model
 * @author     lacyrhoades@gmail.com
 * @version    SVN: $Id: Builder.php 7200 2010-02-21 09:37:37Z beberlei $
 */
abstract class BasesfSympalAsset extends sfDoctrineRecord
{
    public function setTableDefinition()
    {
        $this->setTableName('sf_sympal_asset');
        $this->hasColumn('name', 'string', 255, array(
             'type' => 'string',
             'notnull' => true,
             'length' => '255',
             ));
        $this->hasColumn('path', 'string', 255, array(
             'type' => 'string',
             'notnull' => true,
             'length' => '255',
             ));

        $this->option('symfony', array(
             'filter' => false,
             'form' => false,
             ));
    }

    public function setUp()
    {
        parent::setUp();
        $this->hasMany('sfSympalContent as Content', array(
             'refClass' => 'sfSympalContentAsset',
             'local' => 'asset_id',
             'foreign' => 'content_id'));

        $this->hasMany('sfSympalContentAsset as sfSympalContentAssets', array(
             'local' => 'id',
             'foreign' => 'asset_id'));

        $sfsympalrecordtemplate0 = new sfSympalRecordTemplate();
        $this->actAs($sfsympalrecordtemplate0);
    }
}